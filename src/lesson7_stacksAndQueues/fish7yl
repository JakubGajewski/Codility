import java.util.*;

class Solution {
    public int solution(int[] A, int[] B) {
        final int UP = 0;
        final int DOWN = 1;

        Stack<Integer> downs = new Stack<Integer>();
        int result = 0;

        for (int i = 0; i < A.length; i++) {
            int direction = B[i];

            if (direction == UP) {
                if (downs.isEmpty()) {
                    result++;
                } else {
                    int up = A[i];
                    int down = downs.pop();

                    if (up > down) {
                        i--;
                    } else {
                        downs.push(down);
                    }
                }
            }
            if (direction == DOWN) {
                downs.push(A[i]);
            }
        }
        return result + downs.size();
    }
}
