//attempt 1 - slow but easy

import java.util.*;

class Solution {
    public int[] solution(String S, int[] P, int[] Q) {
        int[] inputValues = getAsIntArray(S);
        int[] result = new int[P.length];

        for (int i = 0; i < P.length; i++) {
            int start = P[i];
            int end = Q[i];

            int minValueOfSlice = 4;
            for (int j = start; j < end; j++) {
                if (inputValues[j] < minValueOfSlice) {
                    minValueOfSlice = inputValues[j];
                }    
            }
            result[i] = minValueOfSlice;
        }
        return result;
    }

    private int[] getAsIntArray(String s) {
        int[] result = new int[s.length()];
        char[] stringAsChars = s.toCharArray();

        for (int i = 0; i < s.length(); i++) {
            result[i] = getValueOfLetter(stringAsChars[i]);
        }
        return result;
    }

    private int getValueOfLetter(char letter) {
        switch (letter) {
            case 'A':
                return 1;
            case 'C':
                return 2;
            case 'G':
                return 3;
            case 'T':
                return 4;
        }
        return -1;
    }
}
